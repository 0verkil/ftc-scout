import type { Region } from "$lib/graphql/generated/graphql-operations";

export const REGION_NAMES = {
    ALL: "All",

    NORTH: "North",
    SOUTH: "South",
    INTERNATIONAL: "International",

    USAK: "Alaska",
    USAL: "Alabama",
    USAR: "Arkansas",
    USAZ: "Arizona",
    USCALA: "California - Los Angeles",
    USCANO: "California - Northern",
    USCASD: "California - San Diego",
    USCHS: "Chesapeake",
    USCO: "Colorado",
    USCT: "Connecticut",
    USDE: "Delaware",
    USFL: "Florida",
    USGA: "Georgia",
    USHI: "Hawaii",
    USIA: "Iowa",
    USID: "Idaho",
    USIL: "Illinois",
    USIN: "Indiana",
    USKY: "Kentucky",
    USLA: "Louisiana",
    USMA: "Massachusets",
    USMI: "Michigan",
    USMN: "Minnesota",
    USMOKS: "Missouri & Kansas",
    USMS: "Mississippi",
    USMT: "Montana",
    USNC: "North Carolina",
    USND: "North Dakota",
    USNH: "New Hampshire",
    USNJ: "New Jersey",
    USNM: "New Mexico",
    USNV: "Nevada",
    USNYEX: "New York - Excelsior",
    USNYLI: "New York - Long Island",
    USNYNY: "New York - NYC",
    USOH: "Ohio",
    USOK: "Oklahoma",
    USOR: "Oregon",
    USPA: "Pennsylvania",
    USRI: "Rhode Island",
    USSC: "South Carolina",
    USTN: "Tennessee",
    USTXCE: "Texas - Central",
    USTXHO: "Texas - Houston",
    USTXNO: "Texas - North",
    USTXSO: "Texas - South",
    USTXWP: "Texas - West and Panhandle",
    USUT: "Utah",
    USVT: "Vermont",
    USWA: "Washington",
    USWI: "Wisconsin",
    USWY: "Wyoming",

    CAAB: "Alberta",
    CABC: "British Columbia",
    CAON: "Ontario",
    CAQC: "Québec",

    AU: "Australia",
    BR: "Brazil",
    CN: "China",
    TW: "Chinese Taipei",
    CY: "Cyprus",
    EG: "Egypt",
    IL: "Israel",
    IN: "India",
    JM: "Jamaica",
    KZ: "Kazakhstan",
    LY: "Libya",
    MX: "Mexico",
    NG: "Nigeria",
    NL: "Netherlands",
    QA: "Qatar",
    RO: "Romania",
    RU: "Russia",
    ZA: "South Africa",
    TH: "Thailand",
    GB: "United Kingdom",

    CMPZ2: "FIRST Championship - Zone 2", // TODO include this?
    ONADOD: "Military and Diplomatic",
    USARL: "Adventist Robotics League",
};

export const REGION_GROUPS = [
    ["All"],
    ["North", "South", "International"],
    [
        "Alaska",
        "Alabama",
        "Arkansas",
        "Arizona",
        "California - Los Angeles",
        "California - Northern",
        "California - San Diego",
        "Chesapeake",
        "Colorado",
        "Connecticut",
        "Delaware",
        "Florida",
        "Georgia",
        "Hawaii",
        "Iowa",
        "Idaho",
        "Illinois",
        "Indiana",
        "Kentucky",
        "Louisiana",
        "Massachusets",
        "Michigan",
        "Minnesota",
        "Missouri & Kansas",
        "Mississippi",
        "Montana",
        "North Carolina",
        "North Dakota",
        "New Hampshire",
        "New Jersey",
        "New Mexico",
        "Nevada",
        "New York - Excelsior",
        "New York - Long Island",
        "New York - NYC",
        "Ohio",
        "Oklahoma",
        "Oregon",
        "Pennsylvania",
        "Rhode Island",
        "South Carolina",
        "Tennessee",
        "Texas - Central",
        "Texas - Houston",
        "Texas - North",
        "Texas - South",
        "Texas - West and Panhandle",
        "Utah",
        "Vermont",
        "Washington",
        "Wisconsin",
        "Wyoming",
    ],
    ["Alberta", "British Columbia", "Ontario", "Québec"],
    [
        "Australia",
        "Brazil",
        "China",
        "Chinese Taipei",
        "Cyprus",
        "Egypt",
        "Israel",
        "India",
        "Jamaica",
        "Kazakhstan",
        "Libya",
        "Mexico",
        "Nigeria",
        "Netherlands",
        "Qatar",
        "Romania",
        "Russia",
        "South Africa",
        "Thailand",
        "United Kingdom",
    ],
    [
        "FIRST Championship - Zone 2", // TODO include this?
        "Military and Diplomatic",
        "Adventist Robotics League",
    ],
];

export function regionToString(region: Region): string {
    return (<any>REGION_NAMES)[region.toString()];
}

export function regionFromStr(str: string): Region | null {
    for (let [k, v] of Object.entries(REGION_NAMES)) {
        if (v == str) {
            return k as Region;
        }
    }

    return null;
}
